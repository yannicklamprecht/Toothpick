From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: ysl3000 <yannicklamprecht@live.de>
Date: Wed, 10 Jun 2020 23:03:38 +0200
Subject: [PATCH] removed obfuscation helper


diff --git a/src/main/java/net/minecraft/core/SectionPos.java b/src/main/java/net/minecraft/core/SectionPos.java
index bc94aeaef56670475492d469161ed4e7dd698853..d27ab6332642f3b121cb0bfef7150b1128489ee5 100644
--- a/src/main/java/net/minecraft/core/SectionPos.java
+++ b/src/main/java/net/minecraft/core/SectionPos.java
@@ -114,7 +114,6 @@ public class SectionPos extends Vec3i {
         return (this.z() << 4) + 15;
     }
 
-    public static long blockToSection(long i) { return blockToSection(i); } // Paper - OBFHELPER
     public static long blockToSection(long i) {
         // b(a(BlockPosition.b(i)), a(BlockPosition.c(i)), a(BlockPosition.d(i)));
         return (((long) (int) (i >> 42) & 4194303L) << 42) | (((long) (int) ((i << 52) >> 56) & 1048575L)) | (((long) (int) ((i << 26) >> 42) & 4194303L) << 20); // Simplify to reduce instruction count
@@ -143,7 +142,6 @@ public class SectionPos extends Vec3i {
         return (((long) (i >> 4) & 4194303L) << 42) | (((long) (j >> 4) & 1048575L)) | (((long) (k >> 4) & 4194303L) << 20);
     }
     // Paper end
-    public static long asLong(int i, int j, int k) { return asLong(i, j, k); } // Paper - OBFHELPER
     public static long asLong(int i, int j, int k) {
         return (((long) i & 4194303L) << 42) | (((long) j & 1048575L)) | (((long) k & 4194303L) << 20); // Paper - Simplify to reduce instruction count
     }
diff --git a/src/main/java/net/minecraft/world/level/block/Block.java b/src/main/java/net/minecraft/world/level/block/Block.java
index b92a46101e7c801da474321f98973e14d344f581..17d0cf07b8d0cdd372a70dbac7c7b0a3d1c80c86 100644
--- a/src/main/java/net/minecraft/world/level/block/Block.java
+++ b/src/main/java/net/minecraft/world/level/block/Block.java
@@ -188,7 +188,40 @@ public class Block extends BlockBase implements ItemLike {
     }
 
     public boolean isRandomlyTicking(BlockState iblockdata) {
-        return this.av;
+        return this.isTicking;
+    }
+
+    public boolean isEntityBlock() {
+        return this instanceof EntityBlock;
+    }
+
+    @Deprecated
+    public boolean hasPostProcess(BlockState iblockdata, BlockGetter iblockaccess, BlockPos blockposition) {
+        return false;
+    }
+
+    public final boolean canOcclude(BlockState iblockdata) {
+        return this.canOcclude;
+    }
+
+    @Deprecated
+    public VoxelShape getShape(BlockState iblockdata, BlockGetter iblockaccess, BlockPos blockposition, CollisionContext voxelshapecollision) {
+        return Shapes.block();
+    }
+
+    @Deprecated
+    public VoxelShape getCollisionShape(BlockState iblockdata, BlockGetter iblockaccess, BlockPos blockposition, CollisionContext voxelshapecollision) {
+        return this.hasCollision ? iblockdata.getShape(iblockaccess, blockposition) : Shapes.empty();
+    }
+
+    @Deprecated
+    public VoxelShape getOcclusionShape(BlockState iblockdata, BlockGetter iblockaccess, BlockPos blockposition) {
+        return iblockdata.getShape(iblockaccess, blockposition);
+    }
+
+    @Deprecated
+    public VoxelShape getInteractionShape(BlockState iblockdata, BlockGetter iblockaccess, BlockPos blockposition) {
+        return Shapes.empty();
     }
 
     public static boolean canSupportRigidBlock(BlockGetter iblockaccess, BlockPos blockposition) {
diff --git a/src/main/java/net/minecraft/world/level/lighting/LayerLightEngine.java b/src/main/java/net/minecraft/world/level/lighting/LayerLightEngine.java
index 38b94894e053f3642537c858a14f75c920667399..630c3a0a7482d7c8c716f644d332cdbccfd5e75c 100644
--- a/src/main/java/net/minecraft/world/level/lighting/LayerLightEngine.java
+++ b/src/main/java/net/minecraft/world/level/lighting/LayerLightEngine.java
@@ -24,7 +24,7 @@ public abstract class LayerLightEngine<M extends DataLayerStorageMap<M>, S exten
     protected final LightLayer layer;
     protected final S storage;
     private boolean runningLightUpdates;
-    protected final BlockPos.MutableBlockPosition pos = new BlockPos.MutableBlockPosition(); protected final BlockPos.MutableBlockPosition pos = pos; // Paper
+    protected final BlockPos.MutableBlockPosition pos = new BlockPos.MutableBlockPosition();
     private final long[] lastChunkPos = new long[2];
     private final ChunkAccess[] lastChunk = new ChunkAccess[2]; // Paper
 
